<div>
    <br/>
    <p>Description: @CurrentWeatherInfo?.weather?[0].description</p>
    <ul>
        <li>Temp: @CurrentTemperature @TemperatureSymbol
            <div class="dropdown">
                <div class="dropdown-content">
                    <button @onclick="ShowFahrenheit">Fahrenheit</button>
                    <button @onclick="ShowCelsius">Celsius</button>
                </div>
            </div>
        </li>
        <li>Humidity: @CurrentWeatherInfo?.main.humidity</li>
        <li>Wind speed: @CurrentWindSpeed @SpeedSymbol
            <div class="dropdown">
                <div class="dropdown-content">
                    <button @onclick="Show_kmh">Km/h</button>
                    <button @onclick="Show_mph">mph</button>
                </div>
            </div>
            </li>
    </ul>
</div>
@code {
    [Parameter] public Weather WeatherHandler { get; set; }
    private WeatherInfoModel.Root? CurrentWeatherInfo;
    private string? TemperatureSymbol = "\u00b0C";
    private string? SpeedSymbol = "Km/h";
    private double CurrentTemperature;
    private double CurrentWindSpeed;
    protected override void OnInitialized()
    {
        WeatherHandler.OnWeatherLoaded += LoadWeatherInfo;
    }
    private void LoadWeatherInfo(object sender,WeatherInfoModel.Root data)
    {
        CurrentWeatherInfo = data;
        Show_kmh();
        ShowCelsius();
    }
    private void Show_kmh()
    {
        CurrentWindSpeed = CurrentWeatherInfo.wind.speed;
        SpeedSymbol = "Km/h";
    }
    private void Show_mph()
    {
        CurrentWindSpeed = Math.Round(CurrentWeatherInfo.wind.speed * 0.621371f,4);
        SpeedSymbol = "m/h";
    }
    private void ShowFahrenheit()
    {
        CurrentTemperature = Math.Round(CurrentWeatherInfo.main.temp * (9f / 5) , 2) + 32;
        TemperatureSymbol = "\u00b0F";
    }
    private void ShowCelsius()
    {
        CurrentTemperature = CurrentWeatherInfo.main.temp;
        TemperatureSymbol = "\u00b0C";
    }
}