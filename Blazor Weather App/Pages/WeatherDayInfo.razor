<p>Description: @CurrentWeatherData.description</p>
      <ul>
          <li>Temp: @CurrentTemperature @TemperatureSymbol
              <div class="dropdown">
                  <div class="dropdown-content">
                      <button @onclick="ShowFahrenheit">Fahrenheit</button>
                      <button @onclick="ShowCelsius">Celsius</button>
                  </div>
              </div>
          </li>
          <li>Humidity: @CurrentWeatherData.HumidityData @HumiditySymbol</li>
          <li>Wind speed: @CurrentWindSpeed @SpeedSymbol
              <div class="dropdown">
                  <div class="dropdown-content">
                      <button @onclick="Show_kmh">Km/h</button>
                      <button @onclick="Show_mph">mph</button>
                  </div>
              </div>
          </li>
      </ul>
@code {
    [Parameter] public WeatherInfo? WeatherInfoHandler { get; set; }
    private string? TemperatureSymbol = "\u00b0C";
    private string? SpeedSymbol = "Km/h";
    private WeatherInfoForDay? CurrentWeatherData;
    private float CurrentTemperature;
    private float CurrentWindSpeed;
    private string? HumiditySymbol = "g/m\u00b3";
    
    protected override void OnInitialized()
    {
        WeatherInfoHandler.OnNewDay += LoadInfo;
    }
    public void LoadInfo()
    {
        CurrentWeatherData = WeatherInfoHandler?.CurrentWeatherDay;
        Show_kmh();
        ShowCelsius();
        StateHasChanged();
    }
    public void Show_kmh()
    {
        CurrentWindSpeed = CurrentWeatherData.WindSpeedData;
        SpeedSymbol = "Km/h";
    }
    public void Show_mph()
    {
        CurrentWindSpeed = (float)Math.Round(CurrentWeatherData.WindSpeedData * 0.621371f,4);
        SpeedSymbol = "m/h";
    }
    public void ShowFahrenheit()
    {
        CurrentTemperature = (float)Math.Round(CurrentWeatherData.TemperatureData * (9f / 5) , 2) + 32;
        TemperatureSymbol = "\u00b0F";
    }
    public void ShowCelsius()
    {
        CurrentTemperature = CurrentWeatherData.TemperatureData;
        TemperatureSymbol = "\u00b0C";
    }
}